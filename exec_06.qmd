---
title: "데이터 탐색하기"
author: 이상일(서울대학교 지리교육과)
date-modified: last-modified
number-sections: true
format: 
  html: 
    toc: true
code-link: true
code-copy: true
execute: 
  warning: false
  error: false
  freeze: auto
editor: visual
bibliography: references.bib
---

## 실습 개요 {.unnumbered}

이 실습은 데이터사이언스의 꽃이라고 할 수 있는 데이터 탐색(exploration)을 다룬다. 데이터 탐색하기는 데이터 변형하기와 데이터 시각화하기를 합친 것으로 이해할 수 있다. 다음의 사항을 이해하고 있는 것이 매우 중요하다.

-   데이터 탐색은 데이터와의 끝임없는 상호작용을 의미한다. 데이터 과학이 데이터로부터 이해, 지식, 통찰력을 획득하는 과정이라고 했을 때, 데이터 탐색은 데이터사이언스의 심장이라 해도 과언이 아니다. 상호작용은 데이터와의 질의응답의 연쇄과정을 의미한다. 의미있는 질문에 답을 얻기 위해서는 거의 반드시 데이터를 변형하거나 시각화해야만 한다.

-   데이터 변형과 데이터 시각화는 개별적으로 데이터 탐색을 가능케 한다. 데이터 변형은 데이터를 다른 각도로 바라볼 수 있게 해주고 다양한 요약 통계값을 산출해 준다. 데이터 시각화는 데이터에 차원을 부가함으로써 시각화 되지 않았다면 발견할 수 없었던 것을 발견하게 해준다.

-   데이터 변형에서 데이터 시각화로 이어지는 시퀀스가 데이터 탐색의 핵심적인 방법론이다. 데이터 변형의 궁극적인 목적은 바로 데이터 시각화를 위한 준비이다. 특정한 형태의 시각화를 이해서는 특정한 형태의 데이터가 필수적이고, 그것이 이해, 지식, 통찰력의 획득으로 나아가게 해주는 주된 경로이다.

-   데이터 시각화의 두 가지 목적은 탐색과 커뮤니케이션이다. 우리가 데이터 시각화를 하는 첫번째 목적은 데이터에 대한 질문에 답을 찾기 위해서이다. 우리가 데이터를 시각화하는 두 번째 목적은 우리가 발견한 것을 다른 사람들과 '잘' 커뮤니케이션하기 위해서 이다.

이번 실습에서는 데이터 변형하기에서 사용한 [`gapmider`](https://cran.r-project.org/web/packages/gapminder/readme/README.html) 데이터를 활용하여 데이터 변형과 데이터 시각화가 어떻게 데이터 탐색에 기여하는지를 알아볼 것이다. [`tidyverse`](https://www.tidyverse.org/) 패키지와 [`gapmider`](https://cran.r-project.org/web/packages/gapminder/readme/README.html) 패키지를 불러온다. [`gapmider`](https://cran.r-project.org/web/packages/gapminder/readme/README.html) 데이터를 다시 한번 살펴본다.

```{r}
library(tidyverse)
library(gapminder)
View(gapminder)
```

## 탐색: 질문에 답을 찾아가는 과정

탐색을 데이터 변형과 시각화의 연쇄 과정으로 보는 관점의 유용성을 매우 간단한 예를 통해 살펴보도록 한다.

나의 질문은 이것이다.

> 대륙별 최대국(인구가 가장 많은 나라)이 소속 대륙 전체에서 차지하는 비중이 어느 정도이고 대륙별로 어느 정도의 차이가 있는지, 그리고 대륙별 최대국의 비중이 시간이 지남에 따라 어떠한 변화 양상을 보여주고 있고, 그러한 양상에 대륙별 차이가 있는지의 여부이다.

`gapminder` 데이터를 살펴보라. 아무리 훑어 보아도 곧바로 이 질문에 답할 수는 없을 것이다. 이 질문에 답하기 위해 우리는 두 가지의 연쇄적인 과제를 수행해야 한다.

-   질문에 답할 수 있는 형태로 데이터를 변형한다.

-   변형한 데이터를 간명한 형태의 그래프로 시각화한다.

-   이 두 가지 과제를 잘 연결한다.

지금까지 배운 것을 총동원해, 코드를 어떻게 작성할 수 있을지 궁리해 본다.

아래에 질문에 답이 될 수 있는 그래프가 있다. Code 탭을 누르면 정답이 보인다. 누르지 말고 최대한 이와 비슷한 그래프가 만들어 지는 코드를 한번 작성해 보라.

::: panel-tabset
## Graph

```{r}
#| echo: false
gapminder |> 
  group_by(year, continent) |> 
  mutate(
    sum_cont = sum(pop),
    country_prop = pop * 100 / sum_cont
  ) |> 
  slice_max(country_prop) |> 
  ggplot() +
  geom_line(aes(x = year, y = country_prop, color = continent), size = 1) +
  labs(x = "Year", y = "% of Population", color = "Continents")
```

## Code

```{r}
#| eval: false
gapminder |> 
  group_by(year, continent) |> 
  mutate(
    sum_cont = sum(pop),
    country_prop = pop * 100 / sum_cont
  ) |> 
  slice_max(country_prop) |> 
  ggplot() +
  geom_line(aes(x = year, y = country_prop, color = continent), size = 1) +
  labs(x = "Year", y = "% of Population", color = "Continents") 
```
:::

코드를 확인하고 자신의 코드와 비교해보라. 동일한 그래프에 이르는 조금 더 긴, 혹은 조금 더 짧은 코드가 가능할 것이다. 짧다고 좋은 것이 아니다. 자신이 이해하기 쉽고, 타인이 이해하기 쉬운 코드가 가장 좋은 코드이다. 중요한 것은, 데이터 탐색의 핵심이 데이터 변형과 데이터 시각화의 적절한 시퀀스라는 점을 이해하는 것이다. 위 코드는 [`dplyr`](https://dplyr.tidyverse.org/) 패키지와 [`ggplot2`](https://ggplot2.tidyverse.org/) 패키지를 연결하여 이 과업을 수행하는 과정을 잘 보여준다.

## 탐색의 유형

### 한 변수의 변동

변동(variation)이란 한 변수값이 보여주는 다양성의 양태이다. 개별 변수에 대해 변동이 보여주는 특성을 파악하는 것은 데이터 탐색의 가장 초보적인 단계이다.

```{r}
#| label: fig-histogram-1
#| fig-cap: "히스토그램"
gapminder |> 
  filter(year == 2007) |>
  ggplot(aes(x = gdpPercap)) +
  geom_histogram()
```

아주 높은 값을 보이는 국가들을 확인하기 위해 데이터 변형을 한다.

```{r}
gapminder |> 
  filter(year == 2007) |> 
  arrange(desc(gdpPercap))
```

### 두 변수 간의 공변동

공변동(covariation)은 두 변수간의 관련성을 포괄적으로 부르는 통계학적인 용어이다. 어떤 두 변수가 개입되는냐에 따라 몇 가지 종류로 나누어 살펴본다.

-   한 범주형 변수와 한 수치형 변수

-   두 범주형 변수

-   두 수치형 변수

#### 한 범주형 변수와 한 수치형 변수

범주형 변수인 대륙에 의거해 수치형 변수인 일인당 GDP의 변동을 탐색한다.

```{r}
#| label: fig-density-1
#| fig-cap: "한 범주형 변수와 한 수치형 변수: 밀도 분포"
gapminder |> 
  filter(year == 2007) |> 
  ggplot(aes(x = gdpPercap)) +
  geom_density(aes(color = continent, fill = continent), alpha = 0.25)
```

일인당 GDP의 대륙간 차이를 박스플롯을 통해 탐색할 수도 있다. 여기서 `fct_reorder()` 는 데이터 시각화에서 매우 중요하다. 이것은 범주 변수의 범주 순서를 바꾸어 주는데, [`tidyverse`](https://www.tidyverse.org/)의 핵심 패키지인 [`forcats`](https://forcats.tidyverse.org/)의 한 함수이다. 이것을 적용하지 않으면 원래 지정된 순서인 알파벳 순서에 따라 박스플롯이 배열된다. 이것을 일인당 GDP의 중위수의 순서로 배열하게 한 것이다.

```{r}
#| label: fig-boxplot-1
#| fig-cap: "한 범주형 변수와 한 수치형 변수: 박스틀롯"
gapminder |> 
  filter(year == 2007) |> 
  ggplot(aes(x = gdpPercap, y = fct_reorder(continent, gdpPercap, median))) +
  geom_boxplot(aes(color = continent))
```

#### 두 범주형 변수

수치형 변수인 일인당 GDP를 동일 간격의 5개 그룹으로 나눈 새로운 범주형 변수를 생성하고, 그것과 또 다른 범주 변수인 대륙과의 관련성을 탐색한다. `geom_count()` 기하 함수가 역할을 한다.

```{r}
#| label: fig-count-1
#| fig-cap: "두 범주형 변수: 카운트플롯"
gapminder |> 
  filter(year == 2007) |> 
  mutate(
    gdp_class = cut_interval(gdpPercap, n =5, labels = c("very low", "low", "middle", "high", "very high"))
  ) |> 
  ggplot(aes(x = continent, y = gdp_class)) +
  geom_count()
```

또 다른 방법은 데이터 변형을 위한 `count()` 함수와 시각화 함수인 `geom_title()` 기하 함수를 결합하는 것이다.

```{r}
#| label: fig-tile-1
#| fig-cap: "두 범주형 변수: 타일플롯"
gapminder |> 
  filter(year == 2007) |> 
  mutate(
    gdp_class = cut_interval(gdpPercap, n =5, labels = c("very low", "low", "middle", "high", "very high"))
  ) |> 
  count(continent, gdp_class) |> 
  ggplot(aes(x = continent, y = gdp_class)) +
  geom_tile(aes(fill = n))
```

#### 두 수치형 변수

두 수치형 변수인 일인당 GDP와 기대수명의 공변동을 탐색하는 가장 기본적이고도 가장 좋은 방법은 산포도를 그리는 것이다.

```{r}
#| label: fig-scatterplot-1
#| fig-cap: "두 수치형 변수: 산포도"
gapminder |> 
  filter(year == 2007) |> 
  ggplot(aes(x = gdpPercap, y = lifeExp)) +
  geom_point(aes()) +
  geom_smooth()
```

일인당 GDP를 여러 급간으로 쪼개서 박스플롯을 적용하는 것도 하나의 대안일 수 있다.

```{r}
#| label: fig-boxplot-2
#| fig-cap: "두 수치형 변수: 박스플롯"
gapminder |> 
  filter(year == 2007) |> 
  ggplot(aes(x = gdpPercap, y = lifeExp)) +
  geom_boxplot(aes(group = cut_width(gdpPercap, 5000)))
```

#### 세 변수 이상

@fig-scatterplot-1 에 또 하나의 수치형 변수(인구 규모)를 결합할 수 있다. 두 축에 로그를 적용하니 두 변수의 관련성이 선형에 가까워 졌다.

```{r}
gapminder |> 
  filter(year == 2007) |> 
  ggplot(aes(x = log(gdpPercap), y = log(lifeExp))) +
  geom_point(aes(size = pop)) +
  geom_smooth()
```

@fig-scatterplot-1 에 또 하나의 범주형 변수(대륙)를 결합할 수 있다.

```{r}
gapminder |> 
  filter(year == 2007) |> 
  ggplot(aes(x = log(gdpPercap), y = log(lifeExp))) +
  geom_point(aes(size = pop)) +
  geom_smooth() +
  facet_wrap(~continent)
```

전세계 인구의 변화 양상과 대륙별 구성을 함께 탐색할 수 있게 해주는 그래프를 제작해 본다. `fct_reorder2()` 함수와 세개의 `scale_ ()` 함수의 기능을 확인한다.

```{r}
gapminder |> 
  group_by(year, continent) |> 
  mutate(
    sum_pop = sum(pop)
  ) |> 
  ggplot(aes(x = year, y = sum_pop)) +
  geom_area(aes(fill = fct_reorder2(continent, year, sum_pop))) +
  scale_x_continuous(breaks = seq(1952, 2007, 5), labels = seq(1952, 2007, 5)) +
  scale_y_continuous(breaks = seq(0, 7000000000, 1000000000), 
                     labels = format(seq(0, 7000000000, 1000000000), big.mark = ",", scientific = FALSE)) +
  scale_fill_brewer(palette = "Set3") + 
  labs(x = "Year", y = "Population", fill = "Continent")
```
