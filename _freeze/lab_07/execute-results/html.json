{
  "hash": "a2c1af64d339ccf7d1ea512ad5be7363",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab07: 데이터 수집하기\"\nauthor: \"이상일(서울대학교 지리교육과 교수), 김세창(사회교육과 지리전공 석사), 김우형(사회교육과 지리전공 석사과정)\"\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\n    embed-resources: false\ncode-link: true\ncode-copy: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\nbibliography: references.bib\n---\n\n\n## 실습 개요 {.unnumbered}\n\n이 실습은 R로 데이터를 수집하는 과정을 다룬다. R을 활용한 데이터 수집은 다양한 방법으로 진행될 수 있지만 여기서는 웹상의 데이터 파일 불러오기, 웹 스크레이핑, API를 이용하는 방식에 집중한다. 실습의 시작은 [`tidyverse`](https://www.tidyverse.org/) 패키지를 불러오는 것이다.\n\n## 웹상의 데이터 파일 불러오기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n아마도 데이터를 수집하는 가장 단순한 방법은 웹상에 파일 형태로 존재하는 데이터를 R에서 불러오는 것일 것이다. `readr` 패키지에서 제공하는 다양한 데이터 불러오기 함수(예: [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.html))를 데이터의 URL에 적용하면 손쉽게 데이터를 획득할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudents <- read_csv(\"https://pos.it/r4ds-students-csv\")\nstudents\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         <dbl> <chr>            <chr>              <chr>               <chr>\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          <NA> \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n```\n\n\n:::\n:::\n\n\n그런데 엑셀 형식의 파일은 [`readxl`](https://readxl.tidyverse.org/) 패키지가 제공하는 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.html) 함수를 이용해 막바로 데이터를 불러오는 것이 불가능하다. [`openxlsx`](https://ycphs.github.io/openxlsx/) 패키지는 이러한 문제를 해결할 수 있게 해준다. 정말 다양한 함수를 제공하지만 [`read.xlsx()`](https://rdrr.io/pkg/openxlsx/man/read.xlsx.html) 함수가 URL을 통해 엑셀 데이터를 불러오는데 사용된다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nxlsx_data <- read.xlsx(\"https://github.com/awalker89/openxlsx/raw/master/inst/readTest.xlsx\")\nxlsx_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Var1 Var2   Var3 Var4  Var5         Var6 Var7\n1   TRUE    1   1.00    a 42042 3209324 This   NA\n2   TRUE   NA     NA    b 42041         <NA>   NA\n3   TRUE    2   1.34    c 42040         <NA>   NA\n4  FALSE    2     NA <NA>    NA         <NA>   NA\n5  FALSE    3   1.56    e    NA         <NA>   NA\n6  FALSE    1   1.70    f 42037         <NA>   NA\n7     NA   NA     NA <NA> 42036         <NA>   NA\n8  FALSE    2  23.00    h 42035         <NA>   NA\n9  FALSE    3  67.30    i 42034         <NA>   NA\n10    NA    1 123.00 <NA> 42033         <NA>   NA\n```\n\n\n:::\n:::\n\n\n## 웹스크레이핑\n\n웹스크레이핑(web scraping)이란 웹페이지로부터 특정한 데이터를 추출하는 것을 의미한다. R에서 웹스크레이핑은 `rvest` 패키지가 답당하는데, `reaxl` 패키지와 마찬가지로 `tidyverse`의 핵심 패키지는 아니기 때문에 따로 불러와야 한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n:::\n\n\n### 웹스크레이핑의 실제 1: 테이블이 하나 있는 경우\n\n위키피디어의 한 항목(List of countries and dependencies by population)에는 표 하나가 포함되어 있다. 해당 표의 데이터를 수집한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population\"\nmy_table <- url |> \n  read_html() |> \n  html_element(\"table\") |> \n  html_table()\nmy_table\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 241 × 7\n   ``      Location    Population `% ofworld` Date  Source (official or …¹ ``   \n   <chr>   <chr>       <chr>      <chr>       <chr> <chr>                  <chr>\n 1 –       World       8,104,769… 100%        5 Ma… UN projection[3]       \"\"   \n 2 1/2 [b] China       1,409,670… 17.4%       31 D… Official estimate[5]   \"[c]\"\n 3 1/2 [b] India       1,400,744… 17.3%       1 Ma… Official projection[6] \"[d]\"\n 4 3       United Sta… 335,893,2… 4.1%        1 Ja… Official estimate[7]   \"[e]\"\n 5 4       Indonesia   279,118,8… 3.4%        1 Ju… National annual proje… \"\"   \n 6 5       Pakistan    241,499,4… 3.0%        1 Ma… 2023 census result[9]  \"[f]\"\n 7 6       Nigeria     223,800,0… 2.8%        1 Ju… Official projection[1… \"\"   \n 8 7       Brazil      203,080,7… 2.5%        1 Au… 2022 census result[11] \"\"   \n 9 8       Bangladesh  169,828,9… 2.1%        14 J… 2022 census result[12] \"\"   \n10 9       Russia      146,150,7… 1.8%        1 Ja… Official estimate[13]  \"[g]\"\n# ℹ 231 more rows\n# ℹ abbreviated name: ¹​`Source (official or fromthe United Nations)`\n```\n\n\n:::\n:::\n\n\n수집한 데이터를 가공해본다. 필요없는 컬럼을 제거하고, 컬럼 이름을 바꾸고, 몇몇 변수를 특정 형태의 타입(numeric, date)으로 변환하기 위한 과정이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_table <- my_table |> \n  select(-1, -7) |> \n  rename(\n    location = \"Location\",\n    population = \"Population\",\n    pop_pct = \"% ofworld\",\n    date = \"Date\",\n    source = \"Source (official or fromthe United Nations)\"\n  ) |> \n  mutate(\n    population = str_remove_all(population, \",\"),\n    population = as.numeric(population),\n    pop_pct = str_remove(pop_pct, \"%\"),\n    pop_pct = as.numeric(pop_pct),\n    date = dmy(date)\n  )\n\nmy_table\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 241 × 5\n   location      population pop_pct date       source                       \n   <chr>              <dbl>   <dbl> <date>     <chr>                        \n 1 World         8104769000   100   2024-05-05 UN projection[3]             \n 2 China         1409670000    17.4 2023-12-31 Official estimate[5]         \n 3 India         1400744000    17.3 2024-03-01 Official projection[6]       \n 4 United States  335893238     4.1 2024-01-01 Official estimate[7]         \n 5 Indonesia      279118866     3.4 2023-07-01 National annual projection[8]\n 6 Pakistan       241499431     3   2023-03-01 2023 census result[9]        \n 7 Nigeria        223800000     2.8 2023-07-01 Official projection[10]      \n 8 Brazil         203080756     2.5 2022-08-01 2022 census result[11]       \n 9 Bangladesh     169828911     2.1 2022-06-14 2022 census result[12]       \n10 Russia         146150789     1.8 2024-01-01 Official estimate[13]        \n# ℹ 231 more rows\n```\n\n\n:::\n:::\n\n\n### 웹스크레이핑의 실제 2: 테이블이 둘 이상인 경우\n\n위키피디아의 한 항목(List of FIPS country codes)에는 동일한 내용에 대해 여러 개의 표가 나타나 있다. 개별 표의 데이터를 수집한 후 결합하여 단일한 데이터 프레임을 구성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://en.wikipedia.org/wiki/List_of_FIPS_country_codes\"\nmy_tables <- url |> \n  read_html() |> \n  html_elements(\"table\") |> \n  html_table() |> \n  bind_rows()\nmy_tables\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 283 × 10\n   Code    `Short-form name` .mw-parser-output .n…¹ .mw-parser-output .n…² ...3 \n   <chr>   <chr>             <chr>                  <chr>                  <chr>\n 1 .mw-pa… Aruba             <NA>                   <NA>                   <NA> \n 2 AC      Antigua and Barb… <NA>                   <NA>                   <NA> \n 3 AE      United Arab Emir… <NA>                   <NA>                   <NA> \n 4 AF      Afghanistan       <NA>                   <NA>                   <NA> \n 5 AG      Algeria           <NA>                   <NA>                   <NA> \n 6 AJ      Azerbaijan        <NA>                   <NA>                   <NA> \n 7 AL      Albania           <NA>                   <NA>                   <NA> \n 8 AM      Armenia           <NA>                   <NA>                   <NA> \n 9 AN      Andorra           <NA>                   <NA>                   <NA> \n10 AO      Angola            <NA>                   <NA>                   <NA> \n# ℹ 273 more rows\n# ℹ abbreviated names:\n#   ¹​`.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteGeocode systems...1`,\n#   ²​`.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteGeocode systems...2`\n# ℹ 5 more variables: ...4 <chr>, ...5 <chr>, ...6 <chr>, X1 <chr>, X2 <chr>\n```\n\n\n:::\n:::\n\n\n수집한 데이터를 약간 가공한다. 역시 필요한 컬럼만 남기고, 이름을 바꿔준다. 마지막 `str_extract`는 Aruba의 단축어에 원치 않는 문자열이 추가되어 있어 제거하기 위한 코드이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_tables <- my_tables |> \n  select(1, 2) |> \n  rename(\n    code = \"Code\", \n    short_name = \"Short-form name\"\n  ) |> \n  mutate(\n    code = str_extract(code, \"[A-Z][A-Z]\")\n  )\nmy_tables\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 283 × 2\n   code  short_name          \n   <chr> <chr>               \n 1 AA    Aruba               \n 2 AC    Antigua and Barbuda \n 3 AE    United Arab Emirates\n 4 AF    Afghanistan         \n 5 AG    Algeria             \n 6 AJ    Azerbaijan          \n 7 AL    Albania             \n 8 AM    Armenia             \n 9 AN    Andorra             \n10 AO    Angola              \n# ℹ 273 more rows\n```\n\n\n:::\n:::\n\n\n::: {.callout-tip collapse=\"false\"}\n## 추가 예제\n\n간혹 테이블을 불러올 때 데이터가 깨지는 경우도 발생한다. 이는 인코딩 방식의 문제인데, 아래와 같이 인코딩 아규먼트를 추가하면 해결된다. 보통 \"EUC-KR\"이나 \"UTF-8\" 둘 중 하나는 제대로 작동한다.\n\n한 번 네이버가 제공하는 주식 거래 상위 품목을 크롤링해보자.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DT)\nkospi <- \"https://finance.naver.com/sise/sise_quant.naver?sosok=0\"\n\nkospi_table <- kospi |> \n  read_html(, encoding = \"EUC-KR\") |> \n  html_elements(\"table\") |> \n  html_table() |> \n  _[[2]] |> \n  filter(is.na(N) == FALSE)\n\ndatatable(kospi_table)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-7b0da126070054e7ca58\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7b0da126070054e7ca58\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\"],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],[\"KODEX 200선물인버스2X\",\"대원전선\",\"KODEX 코스닥150레버리지\",\"KODEX 코스닥150선물인버스\",\"KODEX 인버스\",\"KODEX 레버리지\",\"삼성 인버스 2X WTI원유 선물 ETN\",\"신한 인버스 2X WTI원유 선물 ETN(H)\",\"비에이치\",\"삼성전자\",\"한국석유\",\"조일알미늄\",\"신풍\",\"아센디오\",\"비케이탑스\",\"흥아해운\",\"KODEX 코스닥150\",\"한국ANKOR유전\",\"KIB플러그에너지\",\"계양전기\",\"대한전선\",\"삼성중공업\",\"한온시스템\",\"모나리자\",\"일진다이아\",\"KODEX 200\",\"삼성 인버스 2X 코스닥150 선물 ETN\",\"QV 블룸버그 2X 천연가스 선물 ETN(H)\",\"에이프로젠\",\"금호타이어\",\"대양금속\",\"두산에너빌리티\",\"삼부토건\",\"티웨이항공\",\"TIGER 미국S&amp;P500\",\"TIGER 차이나항셍테크\",\"KODEX 2차전지산업레버리지\",\"삼성 레버리지 천연가스 선물 ETN C\",\"SK하이닉스\",\"NAVER\",\"삼화전기\",\"한화솔루션\",\"KODEX AI반도체핵심장비\",\"TIGER Fn반도체TOP10\",\"한화시스템\",\"기아\",\"TIGER 200선물인버스2X\",\"KODEX 차이나H레버리지(H)\",\"HMM\",\"TIGER 차이나전기차SOLACTIVE\",\"에어부산\",\"TIGER 미국필라델피아반도체나스닥\",\"이구산업\",\"이수페타시스\",\"한컴라이프케어\",\"한화투자증권\",\"대원전선우\",\"일진전기\",\"ACE 미국30년국채액티브(H)\",\"광명전기\",\"후성\",\"카카오\",\"TIGER 화장품\",\"TIGER AI반도체핵심공정\",\"디아이\",\"KODEX 미국달러선물인버스2X\",\"대한해운\",\"KODEX KOFR금리액티브(합성)\",\"제주은행\",\"제이준코스메틱\",\"한화생명\",\"현대로템\",\"한화엔진\",\"SK이터닉스\",\"코오롱모빌리티그룹\",\"KODEX 미국S&amp;P500TR\",\"하이트론\",\"핸즈코퍼레이션\",\"이엔플러스\",\"한화갤러리아\",\"삼화전자\",\"BNK금융지주\",\"대창\",\"STX\",\"LG디스플레이\",\"KODEX 미국S&amp;P500(H)\",\"TIGER 200\",\"팬오션\",\"한화오션\",\"알루코\",\"KOSEF 200\",\"풍산\",\"일진홀딩스\",\"한미반도체\",\"KB금융\",\"삼성 레버리지 WTI원유 선물 ETN\",\"TIGER 미국배당다우존스\",\"신한 레버리지 WTI원유 선물 ETN(H)\",\"QV 인버스 레버리지 WTI원유 선물 ETN(H)\",\"넥센타이어\"],[\"2,100\",\"3,210\",\"11,720\",\"3,430\",\"4,220\",\"18,935\",\"95\",\"81\",\"20,700\",\"77,600\",\"17,150\",\"2,350\",\"941\",\"1,063\",\"53\",\"2,595\",\"14,245\",\"358\",\"405\",\"2,380\",\"13,080\",\"9,390\",\"6,490\",\"3,790\",\"18,910\",\"36,485\",\"5,940\",\"362\",\"1,488\",\"8,190\",\"1,416\",\"16,550\",\"1,518\",\"2,930\",\"17,240\",\"5,970\",\"3,865\",\"5,250\",\"173,200\",\"194,600\",\"67,300\",\"26,500\",\"13,285\",\"12,585\",\"19,140\",\"113,900\",\"2,235\",\"1,744\",\"15,310\",\"8,200\",\"2,965\",\"16,690\",\"6,200\",\"39,000\",\"6,150\",\"3,195\",\"6,820\",\"20,800\",\"8,125\",\"2,660\",\"7,350\",\"49,200\",\"2,855\",\"12,760\",\"19,750\",\"6,035\",\"1,795\",\"106,670\",\"13,650\",\"7,710\",\"2,850\",\"37,950\",\"12,030\",\"18,050\",\"3,530\",\"15,700\",\"1,235\",\"2,800\",\"3,515\",\"1,423\",\"4,405\",\"8,500\",\"1,485\",\"8,250\",\"10,550\",\"11,965\",\"36,555\",\"4,175\",\"31,000\",\"3,315\",\"36,430\",\"74,900\",\"4,255\",\"130,000\",\"73,700\",\"1,528\",\"11,300\",\"1,062\",\"75\",\"8,470\"],[\"보합0\",\"하락\\n\\t\\t\\t\\t190\",\"하락\\n\\t\\t\\t\\t125\",\"상승\\n\\t\\t\\t\\t20\",\"상승\\n\\t\\t\\t\\t5\",\"하락\\n\\t\\t\\t\\t5\",\"상승\\n\\t\\t\\t\\t1\",\"상승\\n\\t\\t\\t\\t1\",\"상승\\n\\t\\t\\t\\t3,060\",\"하락\\n\\t\\t\\t\\t400\",\"상승\\n\\t\\t\\t\\t2,050\",\"상승\\n\\t\\t\\t\\t60\",\"상승\\n\\t\\t\\t\\t72\",\"상승\\n\\t\\t\\t\\t61\",\"하락\\n\\t\\t\\t\\t7\",\"상승\\n\\t\\t\\t\\t50\",\"하락\\n\\t\\t\\t\\t90\",\"상승\\n\\t\\t\\t\\t4\",\"보합0\",\"하락\\n\\t\\t\\t\\t175\",\"하락\\n\\t\\t\\t\\t410\",\"하락\\n\\t\\t\\t\\t40\",\"상승\\n\\t\\t\\t\\t620\",\"상승\\n\\t\\t\\t\\t50\",\"상승\\n\\t\\t\\t\\t890\",\"하락\\n\\t\\t\\t\\t30\",\"상승\\n\\t\\t\\t\\t50\",\"상승\\n\\t\\t\\t\\t12\",\"상승\\n\\t\\t\\t\\t4\",\"상승\\n\\t\\t\\t\\t360\",\"상승\\n\\t\\t\\t\\t33\",\"상승\\n\\t\\t\\t\\t50\",\"하락\\n\\t\\t\\t\\t36\",\"상승\\n\\t\\t\\t\\t15\",\"하락\\n\\t\\t\\t\\t50\",\"상승\\n\\t\\t\\t\\t100\",\"하락\\n\\t\\t\\t\\t30\",\"상승\\n\\t\\t\\t\\t190\",\"하락\\n\\t\\t\\t\\t400\",\"상승\\n\\t\\t\\t\\t5,800\",\"상승\\n\\t\\t\\t\\t4,600\",\"상승\\n\\t\\t\\t\\t550\",\"상승\\n\\t\\t\\t\\t10\",\"하락\\n\\t\\t\\t\\t30\",\"하락\\n\\t\\t\\t\\t550\",\"하락\\n\\t\\t\\t\\t5,700\",\"상승\\n\\t\\t\\t\\t5\",\"상승\\n\\t\\t\\t\\t56\",\"하락\\n\\t\\t\\t\\t290\",\"상승\\n\\t\\t\\t\\t55\",\"상승\\n\\t\\t\\t\\t185\",\"상승\\n\\t\\t\\t\\t50\",\"하락\\n\\t\\t\\t\\t330\",\"하락\\n\\t\\t\\t\\t1,400\",\"상승\\n\\t\\t\\t\\t170\",\"상승\\n\\t\\t\\t\\t25\",\"하락\\n\\t\\t\\t\\t510\",\"하락\\n\\t\\t\\t\\t900\",\"상승\\n\\t\\t\\t\\t25\",\"하락\\n\\t\\t\\t\\t70\",\"하락\\n\\t\\t\\t\\t340\",\"상승\\n\\t\\t\\t\\t900\",\"상승\\n\\t\\t\\t\\t35\",\"하락\\n\\t\\t\\t\\t20\",\"상승\\n\\t\\t\\t\\t500\",\"상승\\n\\t\\t\\t\\t110\",\"하락\\n\\t\\t\\t\\t2\",\"상승\\n\\t\\t\\t\\t40\",\"하락\\n\\t\\t\\t\\t140\",\"상승\\n\\t\\t\\t\\t710\",\"하락\\n\\t\\t\\t\\t45\",\"하락\\n\\t\\t\\t\\t300\",\"하락\\n\\t\\t\\t\\t230\",\"하락\\n\\t\\t\\t\\t1,100\",\"상승\\n\\t\\t\\t\\t165\",\"하락\\n\\t\\t\\t\\t50\",\"상승\\n\\t\\t\\t\\t74\",\"하락\\n\\t\\t\\t\\t15\",\"하락\\n\\t\\t\\t\\t170\",\"상승\\n\\t\\t\\t\\t1\",\"하락\\n\\t\\t\\t\\t105\",\"상승\\n\\t\\t\\t\\t130\",\"하락\\n\\t\\t\\t\\t25\",\"상승\\n\\t\\t\\t\\t350\",\"상승\\n\\t\\t\\t\\t170\",\"상승\\n\\t\\t\\t\\t75\",\"하락\\n\\t\\t\\t\\t15\",\"상승\\n\\t\\t\\t\\t40\",\"하락\\n\\t\\t\\t\\t200\",\"하락\\n\\t\\t\\t\\t5\",\"하락\\n\\t\\t\\t\\t20\",\"상승\\n\\t\\t\\t\\t2,200\",\"하락\\n\\t\\t\\t\\t110\",\"하락\\n\\t\\t\\t\\t3,000\",\"상승\\n\\t\\t\\t\\t1,400\",\"하락\\n\\t\\t\\t\\t30\",\"하락\\n\\t\\t\\t\\t40\",\"하락\\n\\t\\t\\t\\t11\",\"상승\\n\\t\\t\\t\\t2\",\"하락\\n\\t\\t\\t\\t550\"],[\"0.00%\",\"-5.59%\",\"-1.06%\",\"+0.59%\",\"+0.12%\",\"-0.03%\",\"+1.06%\",\"+1.25%\",\"+17.35%\",\"-0.51%\",\"+13.58%\",\"+2.62%\",\"+8.29%\",\"+6.09%\",\"-11.67%\",\"+1.96%\",\"-0.63%\",\"+1.13%\",\"0.00%\",\"-6.85%\",\"-3.04%\",\"-0.42%\",\"+10.56%\",\"+1.34%\",\"+4.94%\",\"-0.08%\",\"+0.85%\",\"+3.43%\",\"+0.27%\",\"+4.60%\",\"+2.39%\",\"+0.30%\",\"-2.32%\",\"+0.51%\",\"-0.29%\",\"+1.70%\",\"-0.77%\",\"+3.75%\",\"-0.23%\",\"+3.07%\",\"+7.34%\",\"+2.12%\",\"+0.08%\",\"-0.24%\",\"-2.79%\",\"-4.77%\",\"+0.22%\",\"+3.32%\",\"-1.86%\",\"+0.68%\",\"+6.65%\",\"+0.30%\",\"-5.05%\",\"-3.47%\",\"+2.84%\",\"+0.79%\",\"-6.96%\",\"-4.15%\",\"+0.31%\",\"-2.56%\",\"-4.42%\",\"+1.86%\",\"+1.24%\",\"-0.16%\",\"+2.60%\",\"+1.86%\",\"-0.11%\",\"+0.04%\",\"-1.02%\",\"+10.14%\",\"-1.55%\",\"-0.78%\",\"-1.88%\",\"-5.74%\",\"+4.90%\",\"-0.32%\",\"+6.37%\",\"-0.53%\",\"-4.61%\",\"+0.07%\",\"-2.33%\",\"+1.55%\",\"-1.66%\",\"+4.43%\",\"+1.64%\",\"+0.63%\",\"-0.04%\",\"+0.97%\",\"-0.64%\",\"-0.15%\",\"-0.05%\",\"+3.03%\",\"-2.52%\",\"-2.26%\",\"+1.94%\",\"-1.93%\",\"-0.35%\",\"-1.03%\",\"+2.74%\",\"-6.10%\"],[\"98,757,087\",\"36,653,272\",\"21,506,173\",\"21,052,013\",\"19,452,454\",\"16,750,604\",\"15,274,608\",\"14,717,561\",\"14,705,798\",\"13,056,919\",\"12,984,410\",\"11,933,806\",\"9,348,483\",\"8,552,068\",\"8,505,645\",\"7,902,727\",\"7,155,405\",\"5,623,201\",\"5,234,056\",\"4,688,885\",\"4,558,768\",\"4,452,918\",\"4,428,320\",\"3,993,299\",\"3,805,999\",\"3,628,387\",\"3,545,643\",\"3,293,496\",\"3,076,621\",\"2,962,801\",\"2,736,607\",\"2,725,526\",\"2,568,067\",\"2,508,920\",\"2,431,832\",\"2,430,652\",\"2,366,125\",\"2,362,595\",\"2,299,485\",\"2,278,628\",\"2,140,086\",\"1,920,905\",\"1,917,087\",\"1,889,523\",\"1,857,068\",\"1,768,896\",\"1,723,623\",\"1,679,332\",\"1,674,888\",\"1,589,233\",\"1,532,874\",\"1,530,150\",\"1,495,841\",\"1,486,869\",\"1,475,645\",\"1,466,502\",\"1,432,114\",\"1,421,701\",\"1,418,579\",\"1,386,323\",\"1,378,058\",\"1,368,687\",\"1,331,840\",\"1,324,236\",\"1,257,647\",\"1,253,681\",\"1,246,913\",\"1,244,562\",\"1,231,949\",\"1,231,670\",\"1,212,459\",\"1,205,866\",\"1,204,569\",\"1,200,117\",\"1,199,728\",\"1,181,651\",\"1,161,680\",\"1,138,622\",\"1,123,212\",\"1,100,753\",\"1,070,323\",\"1,064,944\",\"1,048,968\",\"1,046,462\",\"1,002,671\",\"995,966\",\"990,245\",\"984,676\",\"979,310\",\"979,197\",\"969,330\",\"967,422\",\"967,179\",\"958,389\",\"934,198\",\"932,864\",\"928,407\",\"921,154\",\"906,236\",\"900,495\"],[\"205,846\",\"124,330\",\"255,501\",\"71,693\",\"81,709\",\"320,213\",\"1,437\",\"1,192\",\"298,090\",\"1,021,173\",\"223,016\",\"28,266\",\"9,327\",\"9,434\",\"439\",\"20,761\",\"102,573\",\"2,045\",\"2,106\",\"11,563\",\"60,775\",\"41,915\",\"27,631\",\"15,623\",\"74,290\",\"132,894\",\"20,779\",\"1,196\",\"4,584\",\"23,975\",\"3,775\",\"44,999\",\"3,925\",\"7,280\",\"42,047\",\"14,579\",\"9,183\",\"12,480\",\"402,448\",\"442,906\",\"146,448\",\"51,629\",\"25,723\",\"23,950\",\"35,800\",\"205,499\",\"3,813\",\"2,944\",\"25,736\",\"13,106\",\"4,500\",\"25,591\",\"9,418\",\"59,207\",\"8,950\",\"4,718\",\"9,990\",\"30,215\",\"11,529\",\"3,721\",\"10,286\",\"67,626\",\"3,771\",\"17,020\",\"23,845\",\"7,543\",\"2,247\",\"132,751\",\"16,919\",\"10,147\",\"3,458\",\"46,065\",\"14,553\",\"22,131\",\"4,161\",\"18,597\",\"1,519\",\"3,518\",\"4,012\",\"1,571\",\"4,839\",\"9,014\",\"1,566\",\"8,640\",\"10,631\",\"11,922\",\"36,318\",\"4,086\",\"30,403\",\"3,258\",\"35,467\",\"71,173\",\"4,231\",\"126,926\",\"69,310\",\"1,429\",\"10,504\",\"979\",\"67\",\"7,668\"],[\"2,100\",\"3,205\",\"11,715\",\"3,425\",\"4,215\",\"18,930\",\"94\",\"81\",\"20,700\",\"77,600\",\"17,150\",\"2,345\",\"940\",\"1,062\",\"53\",\"2,595\",\"14,240\",\"357\",\"405\",\"2,380\",\"13,080\",\"9,380\",\"6,480\",\"3,790\",\"18,900\",\"36,485\",\"5,940\",\"362\",\"1,488\",\"8,190\",\"1,416\",\"16,550\",\"1,518\",\"2,925\",\"17,235\",\"5,965\",\"3,860\",\"5,250\",\"173,200\",\"194,600\",\"67,300\",\"26,500\",\"13,280\",\"12,580\",\"19,140\",\"113,800\",\"2,230\",\"1,744\",\"15,310\",\"8,195\",\"2,965\",\"16,685\",\"6,200\",\"38,950\",\"6,140\",\"3,195\",\"6,810\",\"20,800\",\"8,120\",\"2,660\",\"7,350\",\"49,200\",\"2,855\",\"12,760\",\"19,750\",\"6,035\",\"1,794\",\"106,665\",\"13,650\",\"7,700\",\"2,845\",\"37,950\",\"12,020\",\"18,050\",\"3,525\",\"15,695\",\"1,234\",\"2,780\",\"3,515\",\"1,422\",\"4,405\",\"8,490\",\"1,485\",\"8,240\",\"10,550\",\"11,960\",\"36,550\",\"4,175\",\"30,950\",\"3,315\",\"36,430\",\"74,800\",\"4,255\",\"130,000\",\"73,600\",\"1,527\",\"11,300\",\"1,061\",\"74\",\"8,460\"],[\"2,105\",\"3,210\",\"11,720\",\"3,430\",\"4,220\",\"18,935\",\"95\",\"82\",\"20,750\",\"77,700\",\"17,160\",\"2,350\",\"941\",\"1,063\",\"54\",\"2,600\",\"14,245\",\"358\",\"406\",\"2,385\",\"13,090\",\"9,390\",\"6,490\",\"3,805\",\"18,910\",\"36,490\",\"5,945\",\"363\",\"1,489\",\"8,200\",\"1,417\",\"16,560\",\"1,519\",\"2,930\",\"17,240\",\"5,970\",\"3,865\",\"5,255\",\"173,300\",\"194,700\",\"67,400\",\"26,600\",\"13,285\",\"12,585\",\"19,150\",\"113,900\",\"2,235\",\"1,745\",\"15,320\",\"8,200\",\"2,970\",\"16,690\",\"6,210\",\"39,000\",\"6,150\",\"3,200\",\"6,820\",\"20,850\",\"8,125\",\"2,665\",\"7,360\",\"49,250\",\"2,860\",\"12,765\",\"19,760\",\"6,040\",\"1,795\",\"106,670\",\"13,660\",\"7,710\",\"2,850\",\"38,000\",\"12,030\",\"18,090\",\"3,530\",\"15,700\",\"1,235\",\"2,800\",\"3,520\",\"1,423\",\"4,410\",\"8,500\",\"1,486\",\"8,250\",\"10,560\",\"11,965\",\"36,555\",\"4,180\",\"31,000\",\"3,320\",\"36,440\",\"74,900\",\"4,260\",\"130,100\",\"73,700\",\"1,528\",\"11,305\",\"1,062\",\"75\",\"8,470\"],[\"13,688\",\"2,407\",\"10,196\",\"4,390\",\"5,693\",\"20,052\",\"1,422\",\"513\",\"7,134\",\"4,632,551\",\"2,177\",\"2,976\",\"329\",\"1,101\",\"11\",\"6,239\",\"8,504\",\"251\",\"960\",\"648\",\"24,387\",\"82,632\",\"34,644\",\"1,386\",\"2,686\",\"62,006\",\"2,376\",\"214\",\"3,941\",\"23,527\",\"561\",\"106,013\",\"3,219\",\"6,311\",\"31,523\",\"6,328\",\"1,836\",\"2,100\",\"1,260,900\",\"316,047\",\"4,451\",\"45,552\",\"2,385\",\"8,256\",\"36,159\",\"457,928\",\"847\",\"851\",\"105,492\",\"20,802\",\"3,458\",\"22,565\",\"2,073\",\"24,666\",\"1,702\",\"6,855\",\"179\",\"9,919\",\"11,286\",\"1,153\",\"7,883\",\"219,060\",\"1,424\",\"1,359\",\"5,589\",\"1,495\",\"5,729\",\"52,349\",\"4,386\",\"346\",\"24,753\",\"41,420\",\"10,039\",\"4,614\",\"2,216\",\"10,276\",\"341\",\"613\",\"2,465\",\"2,759\",\"745\",\"27,378\",\"1,353\",\"2,559\",\"52,750\",\"2,196\",\"21,695\",\"22,318\",\"94,971\",\"3,205\",\"3,370\",\"20,990\",\"2,100\",\"126,541\",\"297,388\",\"6,173\",\"8,334\",\"5,310\",\"112\",\"8,272\"],[\"N/A\",\"24.88\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"7.87\",\"36.41\",\"14.66\",\"-2,350.00\",\"-5.06\",\"-3.60\",\"-0.08\",\"18.27\",\"N/A\",\"N/A\",\"6.53\",\"-54.09\",\"25.65\",\"-55.89\",\"67.60\",\"15.16\",\"26.86\",\"N/A\",\"N/A\",\"N/A\",\"-6.89\",\"14.92\",\"-1.79\",\"190.23\",\"-2.76\",\"6.13\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"-13.84\",\"31.49\",\"80.12\",\"-22.61\",\"N/A\",\"N/A\",\"10.35\",\"5.23\",\"N/A\",\"N/A\",\"8.37\",\"N/A\",\"3.32\",\"N/A\",\"310.00\",\"51.66\",\"205.00\",\"76.07\",\"52.87\",\"23.88\",\"N/A\",\"11.32\",\"-13.27\",\"-21.62\",\"N/A\",\"N/A\",\"177.93\",\"N/A\",\"8.39\",\"N/A\",\"85.85\",\"-4.96\",\"3.26\",\"25.73\",\"-2,005.00\",\"N/A\",\"18.10\",\"N/A\",\"-3.18\",\"-2.03\",\"-3.89\",\"-7.78\",\"-9.79\",\"4.31\",\"-6.97\",\"-4.56\",\"-1.53\",\"N/A\",\"N/A\",\"9.12\",\"40.95\",\"16.57\",\"N/A\",\"13.42\",\"7.65\",\"47.36\",\"6.44\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"8.58\"],[\"N/A\",\"10.02\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"15.11\",\"4.15\",\"8.67\",\"-0.07\",\"-8.53\",\"-88.87\",\"-228.88\",\"23.02\",\"N/A\",\"N/A\",\"N/A\",\"-1.02\",\"7.83\",\"-4.22\",\"2.21\",\"11.51\",\"2.48\",\"N/A\",\"N/A\",\"N/A\",\"-30.65\",\"13.20\",\"-36.88\",\"0.78\",\"-73.88\",\"91.56\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"-15.61\",\"4.41\",\"7.92\",\"-2.48\",\"N/A\",\"N/A\",\"16.87\",\"20.44\",\"N/A\",\"N/A\",\"4.59\",\"N/A\",\"66.45\",\"N/A\",\"0.52\",\"19.51\",\"0.65\",\"0.59\",\"N/A\",\"9.65\",\"N/A\",\"8.69\",\"-15.89\",\"-10.26\",\"N/A\",\"N/A\",\"2.09\",\"N/A\",\"4.36\",\"N/A\",\"0.97\",\"-16.66\",\"5.43\",\"10.06\",\"-0.19\",\"N/A\",\"N/A\",\"N/A\",\"-136.62\",\"-13.54\",\"-81.19\",\"N/A\",\"-32.47\",\"6.38\",\"-8.32\",\"-73.98\",\"-31.95\",\"N/A\",\"N/A\",\"5.32\",\"6.33\",\"7.19\",\"N/A\",\"8.22\",\"6.21\",\"55.54\",\"8.44\",\"N/A\",\"N/A\",\"N/A\",\"N/A\",\"6.26\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>N<\\/th>\\n      <th>종목명<\\/th>\\n      <th>현재가<\\/th>\\n      <th>전일비<\\/th>\\n      <th>등락률<\\/th>\\n      <th>거래량<\\/th>\\n      <th>거래대금<\\/th>\\n      <th>매수호가<\\/th>\\n      <th>매도호가<\\/th>\\n      <th>시가총액<\\/th>\\n      <th>PER<\\/th>\\n      <th>ROE<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"N\",\"targets\":1},{\"name\":\"종목명\",\"targets\":2},{\"name\":\"현재가\",\"targets\":3},{\"name\":\"전일비\",\"targets\":4},{\"name\":\"등락률\",\"targets\":5},{\"name\":\"거래량\",\"targets\":6},{\"name\":\"거래대금\",\"targets\":7},{\"name\":\"매수호가\",\"targets\":8},{\"name\":\"매도호가\",\"targets\":9},{\"name\":\"시가총액\",\"targets\":10},{\"name\":\"PER\",\"targets\":11},{\"name\":\"ROE\",\"targets\":12}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n:::\n\n## API의 활용\n\nKOSIS를 포함한 많은 대한민국의 데이터 포털은 개방 API 서비스를 제공하고 있다. KOSIS는 공유서비스 홈페이지([https://kosis.kr/openapi/](https://kosis.kr/openapi/index.jsp))를 통해 Open API를 통한 데이터 수집을 권장하고 있다.\n\n앞에서 설명한 것처럼, API용 패키지를 직접 사용할 수도 있지만, 래퍼 패키지가 존재하기만 한다면 그것을 활용하는 것이 훨씬 손쉬운 옵션일 수 있다. 놀랍게도 한국의 주석훈(Seokhoon Joo)이라는 분이 그러한 기능을 하는 `kosis`([https://cran.r-project.org/web/packages/kosis/index.html](https://cran.r-project.org/web/packages/kosis/))라는 패키지를 이미 개발해 두었고, 그것을 활용하고자 한다.\n\n실습 주제는 2022년 센서스 인구 기준으로 전국의 17개 시도별 '지방소멸위험지수'를 계산하고 그래프의 형태로 표현하는 것이다.\n\n### KOSIS에서 API KEY 받기\n\n먼저 API를 활용하기 위해 기관으로부터 KEY를 발급받아야 한다. 이를 위해 통계청에 회원가입을 한 후, KEY를 요청해야 한다. 과정은 아래와 같다.\n\n-   KOSIS 공유서비스 웹페이지(<https://kosis.kr/openapi/>) 접속\n\n-   상단의 \\[활용신청\\] 탭 클릭\n\n    -   통계청의 ONE-ID로 통합로그인(없으면 회원가입 필수)\n\n-   활용신청하여 사용자 인증키 획득\n\n    -   사용자 인증키는 마이페이지에서 언제든 확인 가능\n\n### 패키지 설치 및 인증키 등록\n\n우선 `kosis` 패키지를 오른쪽 하단 윈도우의 Packages 탭을 활용하여 인스톨한다. 이후에 아래와 같이 `kosis`와 `tidyverse` 패키지를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(kosis)\n```\n:::\n\n\n다음으로, `kosis` 패키지의 [`kosis.setKey()`](https://rdrr.io/pkg/kosis/man/kosis.setKey.html) 함수를 이용하여 인증키를 등록한다. Your Key Here 자리에 부여받은 인증키를 붙여 넣는다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkosis.setKey(apiKey = \"Your Key Here\")\n```\n:::\n\n\n### 데이터 추출\n\n이제 통계청 홈페이지에 접속해서 데이터를 불러와본다. 과정은 아래와 같다.\n\n-   KOSIS에 접속 후 로그인\n\n-   데이터에 접근 후 URL 생성\n\n    -   \\[국내통계\\]-\\[주제별 통계\\]-\\[인구\\]-\\[인구총조사\\]-\\[인구부문\\]-\\[총조사인구(2015년 이후)\\]-\\[전수부문 (등록센서스, 2015년 이후)\\]-\\[전수기본표\\]-\\[연령 및 성별 인구\\]\n\n    -   **항목**: '총인구(명)', '총인구_남자(명)', '총인구_여자(명)'만 선택(더 많은 항목을 선택하면 데이터가 너무 커 에러가 발생)\n\n    -   **행정구역별(읍면동)**: '1 레벨'과 '2 레벨' 선택('1 레벨'은 시도 수준, '2 레벨'은 시군구 수준)\n\n    -   **조회기간**: '기간설정' 버턴을 누른 후, 기간설정이 2022\\~2022년인지 확인한다.\n\n    -   **응답필드**: 하나씩 눌러 모두 선택한 후, 'URL생성' 탭을 클릭한다. 그리고 나서 'URL 복사' 탭을 클릭한다. URL 속에 api key가 포함되어 있음을 확인한\n\n-   생성한 URL로부터 데이터 획득\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyour_url <- \"Your URL\"\ndata_api <- getStatDataFromURL(url = your_url)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n`getStatDataFromURL` 함수의 아규먼트에 위에서 생성한 URL을 입력하면, 다운로드 과정 없이 곧바로 데이터를 획득할 수 있다.\n\n### 데이터 정리 및 변형\n\n아래와 같이 데이터를 정리 및 변형한다. 최종적으로 지역별 지역소멸위험지수를 산출한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data_api |> \n  select(C1, C1_NM, C2, C2_NM, ITM_ID, ITM_NM, DT) |> \n  mutate(\n    across(c(C1, DT), as.numeric),\n    ITM_ID = case_match(\n    ITM_ID, \"T00\" ~ \"T\",\n    \"T01\" ~ \"M\",\n    \"T02\" ~ \"F\"),\n  ) |>\n  unite(\"gender_age\", ITM_ID, C2_NM, sep = \"_\") |> \n  pivot_wider(\n    id_cols = c(C1, C1_NM),\n    names_from = gender_age,\n    values_from = DT\n  ) |> \n  mutate(\n    index = (`F_20~24세` + `F_25~29세` + `F_30~34세` + `F_35~39세`) / `T_65세이상`\n  ) |> \n  select(\n    C1, C1_NM, index\n  )\n```\n:::\n\n\n시도 데이터와 시군구 데이터를 분리하여 저장한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_sido <- data |> \n  filter(nchar(C1) == 2) \n\ndata_sgg <- data |> \n  filter(nchar(C1) == 5 & substr(C1, 5, 5) == 0 & !C1_NM %in% c(\"동부\", \"면부\", \"읍부\"))\n```\n:::\n\n\n### 그래프 작성\n\n인구소멸위험지수 연구에서 주로 사용되는 5개의 위험도 클래스의 구분법을 적용하고, 위험도 클래스별로 특정한 색상을 적용하고, 그래프의 범례에 5개의 클래스가 모두 나타나게 하려다보니 코드가 조금 복잡해졌다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_sido <- data_sido |> \n  mutate(\n    index_class = case_when(\n      index < 0.2 ~ \"1\",\n      index >= 0.2 & index < 0.5 ~ \"2\",\n      index >= 0.5 & index < 1.0 ~ \"3\",\n      index >= 1.0 & index < 1.5 ~ \"4\",\n      index >= 1.5 ~ \"5\"\n    ),\n    index_class = factor(index_class, levels = as.character(1:5))\n  )\n\nclass_color <- c(\"1\" = \"#d7191c\", \"2\" = \"#fdae61\",\n                 \"3\" = \"#ffffbf\", \"4\" = \"#a6d96a\", \n                 \"5\" = \"#1a9641\")\ndata_sido |> \n  ggplot(aes(x = index, y = fct_reorder(C1_NM, index))) +\n  geom_col(aes(fill = index_class), show.legend = TRUE) +\n  geom_text(aes(label = format(round(index, digits = 3), \n                               nsmall = 3)), hjust = -0.1) +\n  scale_x_continuous(limits = c(0, 1.5)) +\n  scale_fill_manual(name = \"Classes\", \n                    labels = c(\"< 0.2\", \"0.2 ~ 0.5\", \"0.5 ~ 1.0\", \n                               \"1.0 ~ 1.5\", \">= 1.5\"), \n                    values = class_color, drop = FALSE) +\n  labs(title = \"인구소멸위험지수, 2022년\", \n       x = \"인구소멸위험지수\", \n       y = \"\")\n```\n\n::: {.cell-output-display}\n![](lab_07_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-tip collapse=\"false\"}\n## KOSIS API의 추가 예제\n\n이렇게 KOSIS 홈페이지에서 URL을 직접 지정하지 않고도 데이터를 불러오는 방법이 있다. `getStatData` 함수로, 기관명과 데이터 코드를 아규먼트에 입력하면 해당 데이터를 불러올 수 있다. 가령 방금 실습에서 사용한 데이터는 통계청의 2015년 인구총조사 전수부문의 연령 및 성별인구에 해당한다. 이때 통계청의 기관 코드는 [**101**]{.underline}, 해당 데이터의 코드는 [**DT_1IN503**]{.underline}이다.\n\n아래의 코드는 여기에 몇 개의 아규먼트를 더 추가하여 서울특별시 종로구의 2015년부터 2022년까지의 데이터를 불러오고, 이를 바탕으로 인구소멸지수를 계산하여 그 추이를 시각화 한 것이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naoi_code <- \"11010\" # 서울특별시 종로구 코드\naoi <- getStatData(orgId = 101, tblId = \"DT_1IN1503\", prdSe = \"Y\",\n                    startPrdDe = \"2015\", endPrdDe = \"2022\",\n                    objL1 = aoi_code, objL2 = \"ALL\") |> \n  filter(nchar(C2) == 3)\n\naoi <- aoi |> \n  select(C1, C1_NM, C2, C2_NM, ITM_ID, ITM_NM, DT, PRD_DE) |> \n  filter(ITM_ID == \"T00\" | ITM_ID == \"T01\" | ITM_ID == \"T02\") |> \n  mutate(\n    across(c(C1, DT), as.numeric),\n    ITM_ID = case_match(\n      ITM_ID, \"T00\" ~ \"T\",\n      \"T01\" ~ \"M\",\n      \"T02\" ~ \"F\"),\n  ) |> \n  unite(\"gender_age\", ITM_ID, C2_NM, sep = \"_\") |> \n  pivot_wider(\n    id_cols = c(C1, C1_NM, PRD_DE),\n    names_from = gender_age,\n    values_from = DT\n  ) |> \n  mutate(\n    index = (`F_20~24세` + `F_25~29세` + `F_30~34세` + `F_35~39세`) / `T_65세이상`\n  ) |> \n  select(\n    C1, C1_NM, index, PRD_DE\n  )\n\nregion <- aoi$C1_NM[1]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naoi |> \n  ggplot(aes(x=PRD_DE, y=index)) +\n  geom_point() +\n  geom_line(group = 1, linewidth = 0.5) +\n  ggtitle(paste0(region, \" 인구소멸위험지수 추이\")) +\n  xlab(label = \"연도\") +\n  ylab(label = \"인구소멸위험지수\") +\n  theme(plot.title = element_text(size = 18, hjust=0.5))\n```\n\n::: {.cell-output-display}\n![](lab_07_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n`aoi_code`에 내가 원하는 지역의 코드를 넣으면 마찬가지로 해당 관심지역의 인구소멸위험지수 추이를 관측할 수 있다. 예컨대 인구가 빠르게 증가하는 경기 김포시는 \"31230\", 화성시는 \"31240\"이고, 소멸지수가 가장 높은 경북 상주시는 \"37080\", 경북 문경시는 \"37090\"이다. 제공한 코드에서 한번 `aoi_code` 부분만 변경해보자.\n\n한편, 이렇게 URL 없이 데이터를 불러오는 경우 KOSIS에서 직접 조정하는 것에 비해 덜 번거롭지만 제한사항도 많다. 가령 복수의 지역을 불러오는 것이 반복문을 사용하지 않고서는 불가능하고, 불필요한 데이터를 빼고 가져오기도 어렵다. 그러나 startPrdDe와 endPrdDe 아규먼트를 이용해 데이터를 시계열로 수집하고자 하는 측면에서는 유용하다.\n\n그러므로 수집하고자 하는 데이터를 잘 파악해서 API를 활용해보자.\n:::\n\n### cf) KOSIS API를 활용한 함수 작성\n\n마지막으로, API를 활용한 함수를 소개한다. API를 신청할 때 보았듯, 이는 웹/앱 애플리케이션을 제작하기 위한 용도로 주로 사용된다.\n\n이와 관련된 매우 간단한 예시로, 학생에게 인구소멸지수가 궁금한 지역을 검색해보도록 하는 활동을 구상한다고 가정해보자. 학생이 매번 코드를 작성하며 확인하기란 사실상 불가능하다. 그런데 위에서 사용한 코드와 API를 활용하면 함수를 어렵지 않게 생성할 수 있다.\n\n예컨대 교사가 아래와 같이 `exInd()` 함수를 한번 작성해두면, 학생은 단 한 줄의 코드만 입력해도 금방 지역의 인구소멸지수의 추이를 탐색해볼 수 있을 것이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 함수 생성: 교사 작성 부분\nexInd <- function(){\n  # Library\n  library(tidyverse)\n  library(kosis)\n  library(DT)\n  library(openxlsx)\n  \n  # Table for Searching Region Code\n  region_table <- read.xlsx(\"https://github.com/Sechang-Kim/gis-lab/raw/download/korea-sigungu-code(2022).xlsx\")\n  print(datatable(region_table))\n  \n  # Input Arguments\n  aoi_code <- readline('지역 코드를 입력하세요: ')\n  start <- as.numeric(readline('시작 연도를 입력하세요: '))\n  end <- as.numeric(readline('종료 연도를 입력하세요: '))\n  \n  # Data Request\n  aoi <- getStatData(orgId = 101, tblId = \"DT_1IN1503\", prdSe = \"Y\",\n                     startPrdDe = start, endPrdDe = end,\n                     objL1 = aoi_code, objL2 = \"ALL\") |> \n    filter(nchar(C2) == 3) # Delete 1-age interval(Only 5-age interval)\n  \n  # Data Cleansing\n  aoi <- aoi |> \n    select(C1, C1_NM, C2, C2_NM, ITM_ID, ITM_NM, DT, PRD_DE) |> \n    filter(ITM_ID == \"T00\" | ITM_ID == \"T01\" | ITM_ID == \"T02\") |> \n    mutate(\n      across(c(C1, DT), as.numeric),\n      ITM_ID = case_match(\n        ITM_ID, \"T00\" ~ \"T\",\n        \"T01\" ~ \"M\",\n        \"T02\" ~ \"F\"),\n    ) |> \n    unite(\"gender_age\", ITM_ID, C2_NM, sep = \"_\") |> \n    pivot_wider(\n      id_cols = c(C1, C1_NM, PRD_DE),\n      names_from = gender_age,\n      values_from = DT\n    ) |> \n    mutate(\n      index = (`F_20~24세` + `F_25~29세` + `F_30~34세` + `F_35~39세`) / `T_65세이상`\n    ) |> \n    select(\n      C1, C1_NM, index, PRD_DE\n    )\n  \n  ## Visualization\n  region <- aoi$C1_NM[1] # For Auto-Plot Title\n  vis <- aoi |> \n    ggplot(aes(x=PRD_DE, y=index)) +\n    geom_point() +\n    geom_line(group = 1, linewidth = 0.5) +\n    ggtitle(paste0(region, \" 인구소멸위험지수 추이\")) +\n    xlab(label = \"연도\") +\n    ylab(label = \"인구소멸위험지수\") +\n    theme(plot.title = element_text(size = 18, hjust=0.5))\n  \n  return(vis)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 함수 실행: 학생 작성 부분\nexInd()\n```\n:::\n",
    "supporting": [
      "lab_07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}